# Generated by Django 5.2.4 on 2025-07-31 10:02

import datetime
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='FlowType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='название типа')),
            ],
            options={
                'verbose_name': 'тип',
                'verbose_name_plural': 'типы',
            },
        ),
        migrations.CreateModel(
            name='Status',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='название статуса')),
            ],
            options={
                'verbose_name': 'статус',
                'verbose_name_plural': 'статусы',
            },
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='название категории')),
                ('flow_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='categories', to='core.flowtype', verbose_name='тип')),
            ],
            options={
                'verbose_name': 'категория',
                'verbose_name_plural': 'категории',
            },
        ),
        migrations.CreateModel(
            name='SubCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='название подкатегории')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='subcategories', to='core.category', verbose_name='категория')),
            ],
            options={
                'verbose_name': 'подкатегория',
                'verbose_name_plural': 'подкатегории',
            },
        ),
        migrations.CreateModel(
            name='CashFlow',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.DecimalField(decimal_places=2, max_digits=14, verbose_name='кол-во средств в рублях')),
                ('comment', models.TextField(blank=True, help_text='комментарий к записи в свободной форме', null=True, verbose_name='комментарий')),
                ('created_at', models.DateField(default=datetime.date.today, verbose_name='дата создания')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='cashflows', to='core.category', verbose_name='категория')),
                ('flow_type', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='cashflows', to='core.flowtype', verbose_name='тип')),
                ('status', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='cashflows', to='core.status', verbose_name='статус')),
                ('subcategory', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='cashflows', to='core.subcategory', verbose_name='подкатегория')),
            ],
            options={
                'verbose_name': 'движение денежных средств',
                'verbose_name_plural': 'движения денежных средств',
            },
        ),
        migrations.AddConstraint(
            model_name='category',
            constraint=models.UniqueConstraint(fields=('flow_type', 'name'), name='uniq_category_per_flow_type'),
        ),
        migrations.AddConstraint(
            model_name='subcategory',
            constraint=models.UniqueConstraint(fields=('category', 'name'), name='uniq_subcategory_per_category'),
        ),
    ]
